(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{104:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),b=r,m=u["".concat(i,".").concat(b)]||u[b]||d[b]||o;return n?a.a.createElement(m,c(c({ref:t},p),{},{components:n})):a.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},91:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return s}));var r=n(2),a=n(6),o=(n(0),n(104)),i={sidebar_label:"Dotty",title:"Using with Dotty"},c={unversionedId:"dotty",id:"dotty",isDocsHomePage:!1,title:"Using with Dotty",description:"Installing in SBT",source:"@site/../docs/target/mdoc/dotty.md",slug:"/dotty",permalink:"/docs/dotty",version:"current",sidebar_label:"Dotty",sidebar:"someSidebar",previous:{title:"ScalaPBC: ScalaPB's standalone compiler",permalink:"/docs/scalapbc"},next:{title:"Using third-party protos",permalink:"/docs/third-party-protos"}},l=[{value:"Installing in SBT",id:"installing-in-sbt",children:[]},{value:"Generated code",id:"generated-code",children:[]}],p={rightToc:l};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"installing-in-sbt"},"Installing in SBT"),Object(o.b)("p",null,"ScalaPB 0.11.x fully supports Dotty. There is no need to use ",Object(o.b)("inlineCode",{parentName:"p"},"withDottyCompat"),"\nto get the runtime dependencies correctly added."),Object(o.b)("p",null,"To use ScalaPB with dotty, ensure you use a recent sbt-protoc."),Object(o.b)("p",null,"In ",Object(o.b)("inlineCode",{parentName:"p"},"project/plugins.sbt"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-scala"}),'addSbtPlugin("com.thesamet" % "sbt-protoc" % "1.0.0-RC4")\n\naddSbtPlugin("ch.epfl.lamp" % "sbt-dotty" % "0.4.6")\n\nlibraryDependencies += "com.thesamet.scalapb" %% "compilerplugin" % "0.11.0-M4"\n')),Object(o.b)("p",null,"In build.sbt:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-scala"}),'scalaVersion := "3.0.0-M1"\n\nPB.targets in Compile := Seq(\n  scalapb.gen() -> (sourceManaged in Compile).value / "scalapb"\n)\n')),Object(o.b)("h2",{id:"generated-code"},"Generated code"),Object(o.b)("p",null,"The generated code is designed to compile cleanly on all support versions of\nthe Scala compiler with the default compiler settings. It is known that currently\nthe generator will provide an error if ",Object(o.b)("inlineCode",{parentName:"p"},"-language:strictEquality")," is set."))}s.isMDXComponent=!0}}]);